#!/usr/bin/env node

/**
 * Module dependencies.
 */

const app = require('../app');
const oidcApp = require('../oidcApp');
// const clientApp = require('../client');
const authorizationServerApp = require('../authorizationServer');
const protectedResourceApp = require('../protectedResource');
const debug = require('debug')('auth-openses:server');
const http = require('http');
const https = require('https'), fs = require('fs') /* , helmet = require('helmet') */ ;

const credentials = {
  key: fs.readFileSync('./bin/privkey.pem', 'utf8'),
  cert: fs.readFileSync('./bin/fullchain.pem', 'utf8'),
  };


  
/**
 * Create HTTP server.
 */

const httpServer = http.createServer(app);
const httpsServer = https.createServer(credentials, app);
const oidcHttpServer = http.createServer(oidcApp);
const oidcHttpsServer = https.createServer(credentials, oidcApp);
// const clientHttpServer = http.createServer(clientApp);
// change from seperated apps (ports) to supApps
// const authorizationServerHttpServer = http.createServer(authorizationServerApp);
// const authorizationServerHttpsServer = https.createServer(credentials, authorizationServerApp);
const protectedResourceHttpServer = http.createServer(protectedResourceApp);
const protectedResourceHttpsServer = https.createServer(credentials, protectedResourceApp);


/**
 * Listen on provided port, on all network interfaces.
 */
httpServer.listen(80, () => {
	console.log('HTTP Server running on port 80');
});

// server.listen(443);
httpsServer.listen(443, () => {
	console.log('HTTPS Server running on port 443');
});

oidcHttpServer.listen(3000, () => {
	console.log('oidc HTTP Server running on port 3000');
});

oidcHttpsServer.listen(3010, () => {
	console.log('oidc HTTPS Server running on port 3010');
});

/* clientHttpServer.listen(9000, () => {
	console.log('client Http Server running on port 9000');
}); */

// change from seperated apps (ports) to supApps
/*
authorizationServerHttpServer.listen(9011, () => {
	console.log('oauthorizationServer Http Server running on port 9011');
});

authorizationServerHttpsServer.listen(9001, () => {
	console.log('oauthorizationServer Https Server running on port 9001');
});


protectedResourceHttpServer.listen(9012, () => {
	console.log('protectedResourceHttpServer Http Server running on port 9012');
});

protectedResourceHttpsServer.listen(9002, () => {
	console.log('protectedResourceHttpsServer Https Server running on port 9002');
});
*/
